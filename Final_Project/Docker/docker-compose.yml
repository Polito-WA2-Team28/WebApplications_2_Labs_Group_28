version: '3'

services:
  postgres:
    image: runcor3/webapp2_postgres:final-project
    container_name: postgres
    environment:
    - PGDATA=/mypostgresdata
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  ticketing-service:
    depends_on:
     postgres:
       condition: service_healthy

    image: runcor3/ticketing-service:final-project
    command: sh -c "mkdir /ticketing-service"
    container_name: ticketing-service
    ports:
      - "8081:8081"

  keycloak:
    #image: quay.io/keycloak/keycloak:21.1.1
    image: runcor3/webapp2_keycloak:final-project
    container_name: keycloak
    environment:
    - KEYCLOAK_ADMIN=admin
    - KEYCLOAK_ADMIN_PASSWORD=password
    ports:
      - "8080:8080"
    command: start-dev

  tempo:
    image: grafana/tempo
    extra_hosts: ['host.docker.internal:host-gateway']
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
        - ./tempo/tempo-local.yaml:/etc/tempo.yaml:ro
        - ./tempo-data:/tmp/tempo
    ports:
        - "14268"  # jaeger ingest
        - "9411:9411" # zipki


  loki:
    image: grafana/loki
    extra_hosts: ['host.docker.internal:host-gateway']
    command: [ "-config.file=/etc/loki/local-config.yaml" ]
    ports:
        - "3100:3100"                                   # loki needs to be exposed so it receives logs
    environment:
        - JAEGER_AGENT_HOST=tempo
        - JAEGER_ENDPOINT=http://tempo:14268/api/traces # send traces to Tempo
        - JAEGER_SAMPLER_TYPE=const
        - JAEGER_SAMPLER_PARAM=1

  prometheus:
    image: prom/prometheus
    extra_hosts: ['host.docker.internal:host-gateway']
    command:
        - --enable-feature=exemplar-storage
        - --config.file=/etc/prometheus/prometheus.yml
    volumes:
        - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
        - "9090:9090"

  grafana:
    image: grafana/grafana
    extra_hosts: ['host.docker.internal:host-gateway']
    volumes:
        - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro
        - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards:ro
    environment:
        - GF_AUTH_ANONYMOUS_ENABLED=true
        - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
        - GF_AUTH_DISABLE_LOGIN_FORM=true
        - GF_SERVER_HTTP_PORT=3333
    ports:
        - "3333:3333"

